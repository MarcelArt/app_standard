basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Process:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      template:
        $ref: '#/definitions/models.Template'
      templateId:
        type: integer
      updatedAt:
        type: string
    type: object
  models.ProcessDTO:
    properties:
      templateId:
        type: integer
    type: object
  models.ProcessPage:
    properties:
      id:
        type: integer
      templateId:
        type: integer
      templateName:
        type: string
    type: object
  models.Template:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.TemplateDTO:
    properties:
      name:
        type: string
    type: object
  models.TemplatePage:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  paginate.Page:
    properties:
      error:
        type: boolean
      error_message:
        type: string
      first:
        type: boolean
      items: {}
      last:
        type: boolean
      max_page:
        type: integer
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
      visible:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /{resources}:
    get:
      consumes:
      - application/json
      description: Get a list of resources
      parameters:
      - description: Resource route
        enum:
        - template
        - process
        in: path
        name: resources
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: size
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Filter
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/paginate.Page'
            type: array
      summary: Get a list of resources
      tags:
      - CRUDs
  /process:
    get:
      consumes:
      - application/json
      description: Get a list of processes
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: size
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Filter
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProcessPage'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get a list of processes
      tags:
      - Process
    post:
      consumes:
      - application/json
      description: Create a new process
      parameters:
      - description: Process data
        in: body
        name: process
        required: true
        schema:
          $ref: '#/definitions/models.ProcessDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ProcessDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new process
      tags:
      - Process
  /process/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing process
      parameters:
      - description: Process ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Process'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete an existing process
      tags:
      - Process
    get:
      consumes:
      - application/json
      description: Get a process by ID
      parameters:
      - description: Process ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Process'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get a process by ID
      tags:
      - Process
    put:
      consumes:
      - application/json
      description: Update an existing process
      parameters:
      - description: Process ID
        in: path
        name: id
        required: true
        type: string
      - description: Process data
        in: body
        name: process
        required: true
        schema:
          $ref: '#/definitions/models.ProcessDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProcessDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update an existing process
      tags:
      - Process
  /template:
    get:
      consumes:
      - application/json
      description: Get a list of templates
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: size
        type: integer
      - description: Sort
        in: query
        name: sort
        type: string
      - description: Filter
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TemplatePage'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get a list of templates
      tags:
      - Template
    post:
      consumes:
      - application/json
      description: Create a new template
      parameters:
      - description: Template data
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/models.TemplateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TemplateDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new template
      tags:
      - Template
  /template/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing template
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Template'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete an existing template
      tags:
      - Template
    get:
      consumes:
      - application/json
      description: Get a template by ID
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Template'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get a template by ID
      tags:
      - Template
    put:
      consumes:
      - application/json
      description: Update an existing template
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      - description: Template data
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/models.TemplateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TemplateDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update an existing template
      tags:
      - Template
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
